// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc.team3566.robot.commands;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc.team3566.robot.*;

/**
 *
 */
public class DriveWithJoysticks extends Command {


    public DriveWithJoysticks() {
        requires(Robot.drivetrain);
    }

    @Override
    protected void initialize() {
    }

    @Override
    protected void execute() {
    	double maxPower=SmartDashboard.getNumber("maxPower", 1);
    	maxPower=Math.min(maxPower, (Robot.elevator.elevatorEncoder.getValue()-388)*0.0005+0.35);
    	//if(Robot.elevator.elevatorEncoder.getValue()<1500)maxPower=Math.min(maxPower, 0.6);
    	if(Robot.state==RobotState.STANDSTILL||Robot.state==RobotState.DRIVE)
    		if(Math.abs(Robot.oi.main.getRawAxis(1))<0.1&&Math.abs(Robot.oi.main.getRawAxis(4))<0.1)
    			Robot.state=RobotState.STANDSTILL;
    		else 
    		{
    			RobotMap.drive.arcadeDrive(Robot.oi.main.getRawAxis(1)*-1*maxPower, Robot.oi.main.getRawAxis(4)*Math.max(0.45, maxPower));
    			Robot.state=RobotState.DRIVE;
    		}
    	//Robot.drivetrain.runMotor(Robot.oi.joystick1.getRawAxis(1));
    }

    @Override
    protected boolean isFinished() {
        return false;
    }

    @Override
    protected void end() {
    }

    @Override
    protected void interrupted() {
    }
}
