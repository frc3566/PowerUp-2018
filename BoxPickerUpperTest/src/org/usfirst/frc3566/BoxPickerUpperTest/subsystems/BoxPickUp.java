// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3566.BoxPickerUpperTest.subsystems;

import org.usfirst.frc3566.BoxPickerUpperTest.Robot;
import org.usfirst.frc3566.BoxPickerUpperTest.RobotMap;
import org.usfirst.frc3566.BoxPickerUpperTest.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class BoxPickUp extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
 
    private final WPI_TalonSRX talonSRX2 = RobotMap.runMotorTalonSRX2; 
    private final WPI_TalonSRX talonSRX1 = RobotMap.runMotorTalonSRX1; 
    
    private final WPI_TalonSRX talonSRX4 = RobotMap.runMotorTalonSRX4; 
    private final WPI_TalonSRX talonSRX5 = RobotMap.runMotorTalonSRX5; 

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
         setDefaultCommand(new RunWithJoystick());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands
    public void runOpenJaws(double leftStick1Value)
    {
    	System.out.println("Open Jaws not currently running");
    	//System.out.println("in runOpenJaws left Stick Value is " + leftStick1Value);
    	//talonSRX4.set(leftStick1Value);
    }
    
    
    
    
    
    
    public void runBoxMoverTest(double leftStick1)
    {
    	talonSRX4.set(leftStick1);
    	talonSRX5.set(leftStick1 * (-1.0));
    	
    	
    	if(Robot.oi.getLeftMotorOn()) {
    		if(Robot.oi.getLeftForward()) {
    			talonSRX1.set(RobotMap.BMU_GEAR_MOTOR_SPEED);
    		} else {
    			talonSRX1.set(RobotMap.BMU_GEAR_MOTOR_SPEED * -1.0);
    		}
    	} else {
    		
    		talonSRX1.set(0.0);
    	}
    	
    	
    	
    	
    	
    	if(Robot.oi.getRightMotorOn()) {
    		if(Robot.oi.getRightForward()) {
    			talonSRX2.set(RobotMap.BMU_GEAR_MOTOR_SPEED);
    		} else {
    			talonSRX2.set(RobotMap.BMU_GEAR_MOTOR_SPEED * -1.0);
    		}
    	} else {
    		
    		talonSRX2.set(0.0);
    	}
    	
    }

}

