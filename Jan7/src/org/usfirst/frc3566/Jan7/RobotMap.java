// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3566.Jan7;

import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import com.ctre.phoenix.sensors.PigeonIMU;

import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static WPI_TalonSRX FrontLeft;
    public static WPI_TalonSRX RearLeft;
    public static WPI_TalonSRX FrontRight;
    public static WPI_TalonSRX RearRight;
    
    
    public static WPI_TalonSRX BPU1, BPU2, BPU3, BPU4;
    public static WPI_TalonSRX Elevator1, Elevator2, Elevator3;
    public static WPI_TalonSRX Tilter;
    
    public static PigeonIMU pigeon;
    
    public static SpeedControllerGroup left;
    public static SpeedControllerGroup right;
    
    public static DifferentialDrive driveTrainDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        FrontLeft = new WPI_TalonSRX(17);
        
        
        RearLeft = new WPI_TalonSRX(15);
       // RearLeft.setInverted(true);
        
        
        FrontRight = new WPI_TalonSRX(18);
        FrontRight.setInverted(true);
        pigeon = new PigeonIMU(FrontRight);
       
        //pigeonIMU is connected to the talon with port 2. 
        
        RearRight = new WPI_TalonSRX(16);
        RearRight.setInverted(true);
        
        
        left = new SpeedControllerGroup(FrontLeft, RearLeft);
        right = new SpeedControllerGroup(FrontRight, RearRight);
        
       driveTrainDrive = new DifferentialDrive(left, right);
        
       BPU1 = new WPI_TalonSRX(10); 
       BPU2 = new WPI_TalonSRX(20); 
       BPU3 = new WPI_TalonSRX(30); 
       BPU4 = new WPI_TalonSRX(40); 
       
       Elevator1 = new WPI_TalonSRX(50);
       Elevator2 = new WPI_TalonSRX(60);
       Elevator3 = new WPI_TalonSRX(25);
       
       Tilter = new WPI_TalonSRX(35);
       
        driveTrainDrive.setSafetyEnabled(true);
        driveTrainDrive.setExpiration(0.1);
        driveTrainDrive.setMaxOutput(1.0);


    }
    
}
