// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3566.Jan7.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc3566.Jan7.Robot;

/**
 *
 */
public class DriveForSomething extends Command {
	//on smooth STEM base floor, drive at speed=0.1 for 4 seconds goes 1 meter, or 3.28 feet. 
	//which means that each second, the robot goes 0.82 foot. 

	private double spd;
	private boolean dir;
	
    public DriveForSomething(boolean DriveForDistance, double timeoutORdistance, double speed, boolean direction) {
    	if(DriveForDistance) {
    		timeoutORdistance = (Math.abs(timeoutORdistance)/0.82);
    		//even if driving in distance, should never be negative, but should use direction
    	}
    	this.setTimeout(timeoutORdistance);
    	spd = speed;
    	dir = direction;
    }


    @Override
    protected void initialize() {
    }


    @Override
    protected void execute() {
    	Robot.driveTrain.goForward((dir?1:-1) * spd);
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return this.isTimedOut();
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    	Robot.driveTrain.stopDrive();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    	end();
    }
}
