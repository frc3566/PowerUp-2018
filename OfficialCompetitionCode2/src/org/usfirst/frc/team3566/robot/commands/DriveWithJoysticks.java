// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc.team3566.robot.commands;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc.team3566.robot.*;

/**
 *
 */
public class DriveWithJoysticks extends Command {


    public DriveWithJoysticks() {
        requires(Robot.drivetrain);
    }

    @Override
    protected void initialize() {
    }

    @Override
    protected void execute() {
    	double maxPower=SmartDashboard.getNumber("maxPower", 2);
    	if(Math.abs(maxPower-2)<1e-2)
    		maxPower=(Robot.elevator.elevatorEncoder.getValue()-Robot.elevator.elevatorTargetValues[2])*0.00015+0.45;
 	
    	RobotMap.drive.arcadeDrive((Robot.oi.main.getRawButtonPressed(3)?0.5:1) //if blue X button pressed, slower spd
    			*Robot.oi.main.getRawAxis(1)*-1*maxPower,
    			(Robot.oi.main.getRawAxis(4)*Math.max(0.6, Math.min(0.7, maxPower))+0.02));
    
    	if (Robot.time.get()%2<0.03)System.out.printf("maxPower %f\n",maxPower);
    }

    @Override
    protected boolean isFinished() {
        return false;
    }

    @Override
    protected void end() {
    }

    @Override
    protected void interrupted() {
    }
}
